{"version":3,"sources":["store/distances.js","store/reducer.js","Components/MapItem.js","Components/Marker.js","Components/PersonPin.js","Components/Loading.js","Components/MapComponent.js","Components/SingleExhibition.js","Components/ListRow.js","Components/About.js","Components/List.js","Components/Main.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["distances","latlngA","latlngB","isMiles","toRadian","angle","Math","PI","distance","a","b","lat1","lat2","lon1","lon2","dLat","dLon","pow","sin","cos","finalDistance","asin","sqrt","initialState","location","lat","lng","exhibitions","selected","selectedExhibitions","exhibition","type","deselectedExhibitions","setTheLocation","setTheClosest","getExhibitions","dispatch","axios","get","data","sortedData","map","exh","sort","getSelected","deselectExhibition","reducer","state","action","filter","id","slice","MapItem","props","handleClick","bind","event","this","includes","selectExhibition","className","onClick","title","gallery","React","Component","connect","Marker","mouse","e","setState","markerClass","PersonPin","useStyles","makeStyles","theme","progress","margin","spacing","Loading","classes","CircularProgress","MapComponent","userLocation","zoom","loading","loadExhibitions","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setLocation","setClosest","bootstrapURLKeys","key","center","defaultZoom","SingleExhibition","format","month","day","year","open","DateTime","fromISO","showStart","setLocale","toLocaleString","end","showEnd","imgUrl","description","hours","src","alt","imgCaption","address","city","zip","galleryEmail","phone","ListRow","singleView","toggleSingleView","row","toFixed","About","href","List","about","message","toggleAbout","isLoading","length","Main","App","Boolean","window","hostname","match","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","withExtraArgument","loggingMiddleware","ReactDOM","render","store","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.993f7946.chunk.js","sourcesContent":["export const distances = (latlngA, latlngB, isMiles) => {\n  const toRadian = angle => (Math.PI / 180) * angle;\n  const distance = (a, b) => (Math.PI / 180) * (a - b);\n  const RADIUS_OF_EARTH_IN_KM = 6371;\n\n  let lat1 = latlngA[0];\n  let lat2 = latlngB[0];\n  const lon1 = latlngA[1];\n  const lon2 = latlngB[1];\n\n  const dLat = distance(lat2, lat1);\n  const dLon = distance(lon2, lon1);\n\n  lat1 = toRadian(lat1);\n  lat2 = toRadian(lat2);\n\n  // Haversine Formula\n  const a =\n    Math.pow(Math.sin(dLat / 2), 2) +\n    Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  const c = 2 * Math.asin(Math.sqrt(a));\n\n  let finalDistance = RADIUS_OF_EARTH_IN_KM * c;\n\n  if (isMiles) {\n    finalDistance /= 1.60934;\n  }\n\n  return finalDistance;\n};\n","import axios from \"axios\";\nimport { distances } from \"./distances\";\n\nconst initialState = {\n  location: {\n    lat: 0,\n    lng: 0\n  },\n  exhibitions: [],\n  selected: []\n};\n\n// Action types\nconst GOT_EXHIBITIONS = \"GOT_EXHIBITIONS\";\nconst GOT_SELECTED = \"GOT_SELECTED\";\nconst SELECT_EXHIBITION = \"SELECTED_EXHIBITIONS\";\nconst DESELECT_EXHIBITION = \"DESELECT_EXHIBITION\";\nconst FAKE_SELECTED = \"FAKE_SELECTED\";\nconst SET_LOCATION = \"SET_LOCATION\";\nconst GET_DISTANCES = \"GET_DISTANCES\";\nconst SET_CLOSEST = \"SET_CLOSEST\";\n\n// Action creators\nconst gotExhibitions = exhibitions => ({\n  type: GOT_EXHIBITIONS,\n  exhibitions\n});\n\nconst gotSelected = selected => ({\n  type: GOT_SELECTED,\n  selected\n});\n\nconst selectedExhibitions = exhibition => ({\n  type: SELECT_EXHIBITION,\n  exhibition\n});\n\nconst deselectedExhibitions = exhibition => ({\n  type: DESELECT_EXHIBITION,\n  exhibition\n});\n\nexport const fakeSelected = fake => ({\n  type: FAKE_SELECTED,\n  fake\n});\n\nconst setTheLocation = location => ({\n  type: SET_LOCATION,\n  location\n});\n\nconst setTheClosest = location => ({\n  type: SET_CLOSEST,\n  location\n});\n\n// Thunk creators\nexport const getExhibitions = location => async dispatch => {\n  const { data } = await axios.get(\"https://artopod.herokuapp.com/api\");\n  const sortedData = data\n    .map(exh => ({\n      ...exh,\n      distance: distances(\n        [location.lat, location.lng],\n        [exh.lat, exh.lng],\n        true\n      )\n    }))\n    .sort((a, b) => (a.distance > b.distance ? 1 : -1));\n  dispatch(gotExhibitions(sortedData));\n};\n\nexport const getSelected = exhibitions => async dispatch => {\n  dispatch(gotSelected(exhibitions));\n};\n\nexport const selectExhibition = exhibition => async dispatch => {\n  dispatch(selectedExhibitions(exhibition));\n};\n\nexport const deselectExhibition = exhibition => async dispatch => {\n  dispatch(deselectedExhibitions(exhibition));\n};\n\nexport const setLocation = location => async dispatch => {\n  dispatch(setTheLocation(location));\n};\n\nexport const setClosest = location => async dispatch => {\n  dispatch(setTheClosest(location));\n};\n\n// Reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GOT_EXHIBITIONS: {\n      return {\n        ...state,\n        exhibitions: action.exhibitions\n      };\n    }\n    case GOT_SELECTED: {\n      return {\n        ...state,\n        selected: state.selected\n      };\n    }\n    case SELECT_EXHIBITION: {\n      return {\n        ...state,\n        selected: [action.exhibition, ...state.selected]\n      };\n    }\n    case DESELECT_EXHIBITION: {\n      return {\n        ...state,\n        selected: state.selected.filter(exh => exh.id !== action.exhibition.id)\n      };\n    }\n    case FAKE_SELECTED: {\n      return {\n        ...state,\n        selected: state.exhibitions.slice(0, 5)\n      };\n    }\n    case SET_LOCATION: {\n      return { ...state, location: action.location };\n    }\n    case GET_DISTANCES: {\n      return {\n        ...state,\n        exhibitions: state.exhibitions\n          .map(\n            exh =>\n              (exh.distance = distances(\n                [action.location.lat, action.location.lng],\n                [exh.lat, exh.lng],\n                true\n              ))\n          )\n          .sort((a, b) => a.distance < b.distance)\n      };\n    }\n    case SET_CLOSEST: {\n      return {\n        ...state,\n        selected: [...state.selected, ...state.exhibitions.slice(0, 5)]\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectExhibition, deselectExhibition } from \"../store/reducer\";\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\n\nclass MapItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    const exh = this.props.exh;\n    if (this.props.selected.includes(exh)) {\n      this.props.deselectExhibition(exh);\n    } else {\n      this.props.selectExhibition(exh);\n    }\n  }\n\n  render() {\n    const exh = this.props.exh;\n\n    return (\n      <div className=\"map-item\">\n        {this.props.selected.includes(exh) ? (\n          <div className=\"map-deselect-icon\" onClick={this.handleClick}>\n            <IndeterminateCheckBoxIcon />\n          </div>\n        ) : (\n          <div className=\"map-select-icon\" onClick={this.handleClick}>\n            <AddBoxIcon />\n          </div>\n        )}\n        <p>\n          <i>{exh.title}</i>\n        </p>\n        <p>{exh.gallery}</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  selected: state.selected\n});\n\nconst mapDispatchToProps = dispatch => ({\n  selectExhibition: exh => dispatch(selectExhibition(exh)),\n  deselectExhibition: exh => dispatch(deselectExhibition(exh))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MapItem);\n","import React from \"react\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport MapItem from \"./MapItem\";\n\nclass Marker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mouse: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({ mouse: !this.state.mouse });\n  }\n\n  render() {\n    const markerClass = this.props.selected ? \"marker-selected\" : \"marker\";\n    return (\n      <div className={markerClass} onClick={() => this.handleClick()}>\n        {this.state.mouse ? <MapItem exh={this.props.exh} /> : <RoomIcon />}\n      </div>\n    );\n  }\n}\n\nexport default Marker;\n","import PersonPinCircleIcon from \"@material-ui/icons/PersonPinCircle\";\nimport React from \"react\";\n\nexport function PersonPin() {\n  return (\n    <div className=\"person-pin\">\n      <PersonPinCircleIcon />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport function Loading() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"loading\">\n      <h3>Mapping exhibitions near you!</h3>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"./Marker\";\nimport { PersonPin } from \"./PersonPin\";\nimport { Loading } from \"./Loading\";\nimport { connect } from \"react-redux\";\nimport {\n  getExhibitions,\n  getSelected,\n  setClosest,\n  setLocation\n} from \"../store/reducer\";\n\nclass MapComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userLocation: {\n        lat: 0,\n        lng: 0\n      },\n      zoom: 14,\n      loading: true\n    };\n    this.loadExhibitions = this.loadExhibitions.bind(this);\n  }\n  async componentDidMount() {\n    await navigator.geolocation.getCurrentPosition(position => {\n      const { latitude, longitude } = position.coords;\n      this.setState({\n        userLocation: { lat: latitude, lng: longitude },\n        loading: false\n      });\n      if (this.state.loading === false) {\n        this.loadExhibitions();\n      }\n    });\n  }\n\n  async loadExhibitions() {\n    await this.props.setLocation(this.state.userLocation);\n    await this.props.getExhibitions(this.state.userLocation);\n    await this.props.setClosest(this.state.userLocation);\n    await this.props.getSelected();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"map-container\">\n        <div id=\"map\">\n          <GoogleMapReact\n            bootstrapURLKeys={{\n              key: \"AIzaSyCTILRbtZ7JJi2hgtJkL5SoCSJ0Tq9mwPA\"\n            }}\n            center={this.state.userLocation}\n            defaultZoom={this.state.zoom}\n          >\n            <PersonPin\n              lat={this.props.location.lat}\n              lng={this.props.location.lng}\n            />\n\n            {this.props.exhibitions.map(exh => (\n              <Marker\n                key={exh.id}\n                lat={exh.lat}\n                lng={exh.lng}\n                exh={exh}\n                selected={this.props.selected.includes(exh) ? true : false}\n              />\n            ))}\n          </GoogleMapReact>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  exhibitions: state.exhibitions,\n  selected: state.selected,\n  location: state.location\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getExhibitions: location => dispatch(getExhibitions(location)),\n  getSelected: () => dispatch(getSelected()),\n  setClosest: location => dispatch(setClosest(location)),\n  setLocation: location => dispatch(setLocation(location))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MapComponent);\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nfunction SingleExhibition(props) {\n  const exh = props.exh;\n  const format = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n  const open = DateTime.fromISO(exh.showStart)\n    .setLocale(\"en-US\")\n    .toLocaleString(format);\n  const end = DateTime.fromISO(exh.showEnd)\n    .setLocale(\"en-US\")\n    .toLocaleString(format);\n  const imgUrl = `https://artforum.com${exh.imgUrl}`;\n\n  return (\n    <div className=\"about body\">\n      <em>{exh.title}</em>\n      <p className=\"multi-line\">{exh.description}</p>\n      <p>\n        Open {open} to {end}\n      </p>\n      <p>{exh.hours}</p>\n      <img\n        src={imgUrl}\n        alt={exh.imgCaption}\n        className=\"single-exhibition-image\"\n      ></img>\n      <p>{exh.imgCaption}</p>\n      <em>{exh.gallery}</em>\n      <p>\n        Address: {exh.address}, {exh.city}, {exh.zip}\n      </p>\n      <p>{exh.galleryEmail}</p>\n      <p>{exh.phone}</p>\n    </div>\n  );\n}\n\nexport default SingleExhibition;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deselectExhibition } from \"../store/reducer\";\n\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\nimport SingleExhibition from \"./SingleExhibition\";\n\nclass ListRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      singleView: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleSingleView = this.toggleSingleView.bind(this);\n  }\n\n  handleClick(event) {\n    this.props.deselectExhibition(this.props.row);\n  }\n\n  toggleSingleView(event) {\n    this.setState({ singleView: !this.state.singleView });\n  }\n\n  render() {\n    return (\n      <div className=\"list-row\">\n        <div className=\"deselect-icon\" onClick={this.handleClick}>\n          <IndeterminateCheckBoxIcon />\n        </div>\n        <div className=\"list-row-info\" onClick={this.toggleSingleView}>\n          {!this.state.singleView ? (\n            <div>\n              <p>\n                <em>{this.props.row.title}</em> at {this.props.row.gallery}\n              </p>\n\n              <p>{this.props.row.hours}</p>\n              <p>{this.props.row.distance.toFixed(2)}mi away</p>\n            </div>\n          ) : (\n            <SingleExhibition exh={this.props.row} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deselectExhibition: exh => dispatch(deselectExhibition(exh))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ListRow);\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"about body\">\n      <p>\n        Artopod is a single-page application by\n        <a href=\"https://siwinlo.github.io\"> Siwin Lo</a>, which finds the 5\n        closes art exhibitions to you, and lets you take it from there\n      </p>\n      <p>\n        Perfect for the busy lifestyles of New Yorkers, and inspired by\n        location-based apps like Tinder and Yelp, Artopod helps users find art\n        exhibitions close by without the overwhelming choice and cumbersome\n        nature of traditional listings.\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ListRow from \"./ListRow\";\nimport { getExhibitions, getSelected } from \"../store/reducer\";\nimport About from \"./About\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      about: false,\n      loading: true,\n      message: \"Finding exhibitions near you\"\n    };\n    this.toggleAbout = this.toggleAbout.bind(this);\n    this.isLoading = this.isLoading.bind(this);\n  }\n  async componentDidMount() {\n    await this.props.getSelected();\n  }\n\n  toggleAbout(event) {\n    this.setState({\n      about: !this.state.about\n    });\n  }\n\n  isLoading() {\n    if (this.props.exhibitions.length > 0) {\n      this.setState({\n        loading: false,\n        message: \"Select exhibitions from the map\"\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"banner\">\n          <h1 onClick={this.toggleAbout}>Artopod</h1>\n          <div className=\"about\">{this.state.about ? <About /> : null}</div>\n        </div>\n        <div className=\"list-container\">\n          {this.props.selected.length > 0 ? (\n            this.props.selected.map(row => <ListRow key={row.id} row={row} />)\n          ) : (\n            <h3>{this.state.message}</h3>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  exhibitions: state.exhibitions,\n  selected: state.selected\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getExhibitions: () => dispatch(getExhibitions()),\n  getSelected: () => dispatch(getSelected())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(List);\n","import React from \"react\";\n\nimport MapComponent from \"./MapComponent\";\nimport List from \"./List\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      about: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"main-container\">\n          <div>\n            <MapComponent />\n          </div>\n          <div>\n            <List />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./Components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport axios from \"axios\";\nimport reducer from \"./reducer\";\nimport loggingMiddleware from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\nexport default createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(\n      thunkMiddleware.withExtraArgument({ axios }),\n      loggingMiddleware\n    )\n  )\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}